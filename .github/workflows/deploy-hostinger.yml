# ⚠️  ATENÇÃO: NÃO MODIFICAR ESTE ARQUIVO SEM APROVAÇÃO DO LUIS
# Este deploy está funcionando perfeitamente. Mudanças podem quebrar o sistema.
# Se precisar alterar algo, SEMPRE consultar Luis primeiro!
# Deploy atual: React build + FTP para Hostinger - FUNCIONAL ✅

name: 🚀 Deploy para Hostinger

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🔧 Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Instalar dependências
      run: |
        echo "📦 Instalando dependências..."
        npm install
        
    - name: 🏗️ Build do projeto
      run: |
        echo "🏗️ Buildando projeto React..."
        # 🤖 Configurando PokerBot - CRIAR .env ANTES DO BUILD
        echo "VITE_GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" > .env
        echo "📄 Verificando .env criado para o frontend:"
        cat .env
        
        npm run build # AGORA O BUILD VAI LER A CHAVE CORRETA
        
        echo "📄 Copiando .htaccess..."
        cp .htaccess dist/
        echo "📄 Copiando .env para dist/ (para garantir que esteja lá, embora o valor já esteja embutido no JS)"
        cp .env dist/
                echo "🔧 Configurando banco de dados e email..."
                echo "DB_HOST=${{ secrets.DB_HOST }}" > api/.env
                echo "DB_NAME=${{ secrets.DB_NAME }}" >> api/.env
                echo "DB_USER=${{ secrets.DB_USER }}" >> api/.env
                echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> api/.env
                echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> api/.env
                echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> api/.env
                echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> api/.env
                echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> api/.env
                echo "SMTP_ENCRYPTION=${{ secrets.SMTP_ENCRYPTION }}" >> api/.env
                
                echo "📦 Instalando PHPMailer via Composer..."
                cd api
                curl -sS https://getcomposer.org/installer | php
                php composer.phar install --no-dev --optimize-autoloader
                cd ..
        echo "✅ Build concluído!"
        ls -la dist/
        
    - name: 🚀 Deploy Frontend via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_HOST }}
        username: ${{ secrets.HOSTINGER_FTP_USER }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        port: 21
        protocol: ftp
        local-dir: ./dist/
        server-dir: /poker/
        
    - name: 🔧 Deploy API via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_HOST }}
        username: ${{ secrets.HOSTINGER_FTP_USER }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        port: 21
        protocol: ftp
        local-dir: ./api/
        server-dir: /poker/api/
        
    - name: ✅ Deploy concluído
      run: |
        echo "🎉 Deploy realizado com sucesso!"
        echo "🌐 Site disponível em: https://luisfboff.com"
        echo "📧 Contato: luis@luisfboff.com"
        echo "👨‍💻 Desenvolvedor: Luis Fernando Boff"