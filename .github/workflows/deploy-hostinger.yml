# ⚠️ ATENÇÃO: Deploy atualizado para Next.js + TypeScript
# Sistema modernizado: Next.js (SSG) + Tailwind 4.1 + shadcn/ui + TypeScript
# Deploy: Next.js build estático + FTP para Hostinger - ATUALIZADO ✅

name: 🚀 Deploy para Hostinger (Next.js)

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Instalar dependências
        run: |
          echo "📦 Instalando dependências (com cache)..."
          npm install --prefer-offline --no-audit --no-fund

      - name: 🏗️ Build Next.js (SSG)
        run: |
          echo "🏗️ Construindo aplicação Next.js para produção..."

          # Configurar variáveis de ambiente FRONTEND (apenas NEXT_PUBLIC_*)
          echo "NEXT_PUBLIC_API_URL=/api" > .env.local
          echo "NEXT_PUBLIC_GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env.local

          # Build Next.js (gera arquivos estáticos em /dist)
          npm run build

          echo "✅ Build Next.js concluído!"

      - name: 🔧 Configurar APIs PHP
        run: |
          echo "🔧 Preparando pasta dist/api..."
          mkdir -p dist/api

          echo "📋 Copiando APIs PHP..."
          cp -r api/* dist/api/
          echo "✅ APIs copiadas!"

          echo "🔧 Criando arquivo .env..."
          {
            echo "DB_HOST=${{ secrets.DB_HOST }}"
            echo "DB_NAME=${{ secrets.DB_NAME }}"
            echo "DB_USER=${{ secrets.DB_USER }}"
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"
            echo "SMTP_HOST=${{ secrets.SMTP_HOST }}"
            echo "SMTP_PORT=${{ secrets.SMTP_PORT }}"
            echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}"
            echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}"
            echo "SMTP_ENCRYPTION=${{ secrets.SMTP_ENCRYPTION }}"
            echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}"
          } > dist/api/.env

          echo "📄 Verificando .env criado:"
          ls -la dist/api/.env
          echo "Tamanho do arquivo:" $(wc -c < dist/api/.env) "bytes"

          echo "📦 Instalando PHPMailer via Composer..."
          cd dist/api
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-dev --optimize-autoloader
          cd ../..

          echo "📄 Copiando .htaccess..."
          cp .htaccess dist/ || echo "⚠️ .htaccess não encontrado"

          echo "✅ Build e configuração concluídos!"
          echo "Arquivos em dist:"
          ls -la dist/
          echo "Arquivos em dist/api:"
          ls -la dist/api/ | head -20

      - name: 🚀 Deploy para Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.HOSTINGER_FTP_HOST }}
          username: ${{ secrets.HOSTINGER_FTP_USER }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          port: 21
          protocol: ftp
          local-dir: ./dist/
          server-dir: /poker/
          state-name: .ftp-deploy-sync-state-nextjs.json
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.next/**
            **/.ftp-deploy-sync-state*

      - name: ✅ Deploy concluído
        run: |
          echo "🎉 Deploy realizado com sucesso!"
          echo "🌐 Site disponível em: https://luisfboff.com"
          echo "📧 Contato: luis@luisfboff.com"
          echo "👨‍💻 Desenvolvedor: Luis Fernando Boff"
          echo "🚀 Stack: Next.js + TypeScript + Tailwind 4.1 + shadcn/ui"
